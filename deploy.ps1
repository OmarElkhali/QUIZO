# Script de d√©ploiement complet - Frontend + Backend
# Usage: .\deploy.ps1

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "   QUIZO - D√©ploiement Complet" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# V√©rifier si on est dans le bon r√©pertoire
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erreur: Vous devez ex√©cuter ce script depuis la racine du projet" -ForegroundColor Red
    exit 1
}

# Fonction pour afficher les erreurs
function Show-Error {
    param($message)
    Write-Host "‚ùå $message" -ForegroundColor Red
    exit 1
}

# Fonction pour afficher le succ√®s
function Show-Success {
    param($message)
    Write-Host "‚úÖ $message" -ForegroundColor Green
}

# Fonction pour afficher les informations
function Show-Info {
    param($message)
    Write-Host "‚ÑπÔ∏è  $message" -ForegroundColor Yellow
}

# 1. BUILD DU FRONTEND
Write-Host ""
Write-Host "üì¶ 1/5 - Build du Frontend..." -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue

try {
    npm run build
    if ($LASTEXITCODE -ne 0) {
        Show-Error "√âchec du build frontend"
    }
    Show-Success "Frontend build avec succ√®s"
} catch {
    Show-Error "Erreur lors du build frontend: $_"
}

# 2. D√âPLOIEMENT FIREBASE (Firestore Rules + Hosting)
Write-Host ""
Write-Host "üî• 2/5 - D√©ploiement Firebase..." -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue

Show-Info "D√©ploiement des r√®gles Firestore..."
try {
    firebase deploy --only firestore:rules
    if ($LASTEXITCODE -ne 0) {
        Show-Error "√âchec du d√©ploiement des r√®gles Firestore"
    }
    Show-Success "R√®gles Firestore d√©ploy√©es"
} catch {
    Show-Error "Erreur lors du d√©ploiement Firestore: $_"
}

Show-Info "D√©ploiement du frontend sur Firebase Hosting..."
try {
    firebase deploy --only hosting
    if ($LASTEXITCODE -ne 0) {
        Show-Error "√âchec du d√©ploiement Firebase Hosting"
    }
    Show-Success "Frontend d√©ploy√© sur Firebase Hosting"
} catch {
    Show-Error "Erreur lors du d√©ploiement Firebase Hosting: $_"
}

# 3. V√âRIFICATION DU BACKEND PYTHON
Write-Host ""
Write-Host "üêç 3/5 - Pr√©paration du Backend Python..." -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue

if (-not (Test-Path "python_api")) {
    Show-Error "Dossier python_api introuvable"
}

Push-Location python_api

# V√©rifier les fichiers n√©cessaires
if (-not (Test-Path ".env")) {
    Show-Info "Fichier .env manquant dans python_api/"
    Show-Info "Copiez .env.example vers .env et configurez vos cl√©s API"
    Pop-Location
    Show-Error "Configuration backend incompl√®te"
}

Show-Info "V√©rification des d√©pendances Python..."
if (-not (Test-Path "requirements.txt")) {
    Pop-Location
    Show-Error "requirements.txt introuvable"
}

Show-Success "Backend Python pr√™t pour le d√©ploiement"
Pop-Location

# 4. INFORMATION POUR RENDER
Write-Host ""
Write-Host "‚òÅÔ∏è  4/5 - D√©ploiement Backend (Render)..." -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue

Show-Info "Le backend Python doit √™tre d√©ploy√© manuellement sur Render.com"
Write-Host ""
Write-Host "√âtapes pour d√©ployer sur Render:" -ForegroundColor White
Write-Host "  1. Connectez-vous sur https://render.com" -ForegroundColor Gray
Write-Host "  2. Cr√©ez un nouveau 'Web Service'" -ForegroundColor Gray
Write-Host "  3. Connectez votre repository GitHub: OmarElkhali/QUIZO" -ForegroundColor Gray
Write-Host "  4. Configurez:" -ForegroundColor Gray
Write-Host "     - Root Directory: python_api" -ForegroundColor Gray
Write-Host "     - Build Command: pip install -r requirements.txt" -ForegroundColor Gray
Write-Host "     - Start Command: gunicorn app:app" -ForegroundColor Gray
Write-Host "  5. Ajoutez les variables d'environnement:" -ForegroundColor Gray
Write-Host "     - GEMINI_API_KEY" -ForegroundColor Gray
Write-Host "     - CHATGPT_API_KEY (optionnel)" -ForegroundColor Gray
Write-Host "     - CORS_ORIGINS" -ForegroundColor Gray
Write-Host "     - LOG_LEVEL=INFO" -ForegroundColor Gray
Write-Host "  6. Cliquez sur 'Create Web Service'" -ForegroundColor Gray
Write-Host ""
Show-Info "Une fois d√©ploy√©, notez l'URL du backend (ex: https://votre-app.onrender.com)"

# 5. GIT PUSH
Write-Host ""
Write-Host "üöÄ 5/5 - Push sur GitHub..." -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue

Show-Info "V√©rification du statut Git..."
$gitStatus = git status --porcelain
if ($gitStatus) {
    Show-Info "Fichiers modifi√©s d√©tect√©s"
    Write-Host ""
    git status --short
    Write-Host ""
    
    $response = Read-Host "Voulez-vous commiter et pusher ces changements? (o/N)"
    if ($response -eq "o" -or $response -eq "O") {
        $commitMessage = Read-Host "Message du commit"
        if ([string]::IsNullOrWhiteSpace($commitMessage)) {
            $commitMessage = "chore: mise √† jour et d√©ploiement"
        }
        
        try {
            git add .
            git commit -m "$commitMessage"
            git push origin main
            if ($LASTEXITCODE -ne 0) {
                Show-Error "√âchec du push Git"
            }
            Show-Success "Code push√© sur GitHub"
        } catch {
            Show-Error "Erreur lors du push Git: $_"
        }
    } else {
        Show-Info "Push Git ignor√©"
    }
} else {
    Show-Success "Aucune modification √† commiter"
}

# R√âSUM√â FINAL
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "   ‚úÖ D√âPLOIEMENT TERMIN√â" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "R√©sum√©:" -ForegroundColor White
Write-Host "  ‚úÖ Frontend build√©" -ForegroundColor Green
Write-Host "  ‚úÖ R√®gles Firestore d√©ploy√©es" -ForegroundColor Green
Write-Host "  ‚úÖ Frontend d√©ploy√© sur Firebase Hosting" -ForegroundColor Green
Write-Host "  ‚ÑπÔ∏è  Backend Python: D√©ploiement manuel sur Render requis" -ForegroundColor Yellow
Write-Host ""
Write-Host "Prochaines √©tapes:" -ForegroundColor White
Write-Host "  1. D√©ployez le backend sur Render.com (si pas encore fait)" -ForegroundColor Gray
Write-Host "  2. Mettez √† jour VITE_BACKEND_URL dans les variables d'environnement Firebase" -ForegroundColor Gray
Write-Host "  3. Testez votre application sur l'URL Firebase" -ForegroundColor Gray
Write-Host ""
Write-Host "üì± Frontend Vercel: https://quizo-ruddy.vercel.app" -ForegroundColor Cyan
Write-Host "üîó Backend Render: https://quizo-nued.onrender.com" -ForegroundColor Cyan
Write-Host "ÔøΩ Repository GitHub: https://github.com/OmarElkhali/QUIZO" -ForegroundColor Cyan
Write-Host ""
